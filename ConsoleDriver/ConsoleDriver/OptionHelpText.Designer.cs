//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConsoleDriver {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class OptionHelpText {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal OptionHelpText() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ConsoleDriver.OptionHelpText", typeof(OptionHelpText).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows duplicate sections. Additional sections parsed replace the original section in the map, but are preserved when output to text..
        /// </summary>
        internal static string AllowDuplicateSections {
            get {
                return ResourceManager.GetString("AllowDuplicateSections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows keys to occur outside of a section. They can be accessed through the section named `&lt;global&gt;`..
        /// </summary>
        internal static string AllowGlobalKeys {
            get {
                return ResourceManager.GetString("AllowGlobalKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Like UseQuotation, but always writes quotation marks to text, whether the value has leading or trailing whitespace or not..
        /// </summary>
        internal static string AlwaysUseQuotation {
            get {
                return ResourceManager.GetString("AlwaysUseQuotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A single space is added on either side of the delimiter..
        /// </summary>
        internal static string BothSides {
            get {
                return ResourceManager.GetString("BothSides", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accepts a `:` token to assign a value to a key..
        /// </summary>
        internal static string ColonDelimiter {
            get {
                return ResourceManager.GetString("ColonDelimiter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writes `\r\n` to text..
        /// </summary>
        internal static string CrLfNewline {
            get {
                return ResourceManager.GetString("CrLfNewline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writes `System.Environment.NewLine` to text..
        /// </summary>
        internal static string DefaultEnvironmentNewline {
            get {
                return ResourceManager.GetString("DefaultEnvironmentNewline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disallows duplicate keys and throws an exception when the parser encounters one. Adding a value to a key replaces the old value..
        /// </summary>
        internal static string DisallowDuplicateKeys {
            get {
                return ResourceManager.GetString("DisallowDuplicateKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disallows duplicate sections and throws an exception when the parser encounters one..
        /// </summary>
        internal static string DisallowDuplicateSections {
            get {
                return ResourceManager.GetString("DisallowDuplicateSections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disallows global keys and throws an exception when a key is encountered outside of a section..
        /// </summary>
        internal static string DisallowGlobalKeys {
            get {
                return ResourceManager.GetString("DisallowGlobalKeys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows duplicate keys. Additional keys parsed and values added to the configuration accumulate new values. All keys parsed and added are preserved when output to text..
        /// </summary>
        internal static string DuplicateKeyAddsValue {
            get {
                return ResourceManager.GetString("DuplicateKeyAddsValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows duplicate keys. Additional keys parsed with the same name replace the old value of the key, but are preserved when output to text..
        /// </summary>
        internal static string DuplicateKeyReplacesValue {
            get {
                return ResourceManager.GetString("DuplicateKeyReplacesValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accepts a `=` token to assign a value to a key..
        /// </summary>
        internal static string EqualsDelimiter {
            get {
                return ResourceManager.GetString("EqualsDelimiter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accepts a `=` or `:` token to assign a value to a key..
        /// </summary>
        internal static string EqualsOrColonDelimiter {
            get {
                return ResourceManager.GetString("EqualsOrColonDelimiter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comments may begin with either a `#` or a `;` token.
        /// </summary>
        internal static string HashAndSemicolonComments {
            get {
                return ResourceManager.GetString("HashAndSemicolonComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comments may begin with a `#` token.
        /// </summary>
        internal static string HashComments {
            get {
                return ResourceManager.GetString("HashComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Escape sequences are ignored and parsed as literal text..
        /// </summary>
        internal static string IgnoreEscapeSequences {
            get {
                return ResourceManager.GetString("IgnoreEscapeSequences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quotation marks are parsed as literal text and are included in the key value..
        /// </summary>
        internal static string IgnoreQuotation {
            get {
                return ResourceManager.GetString("IgnoreQuotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A single space is added on the left side of the delimiter only..
        /// </summary>
        internal static string LeftOnly {
            get {
                return ResourceManager.GetString("LeftOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writes `\n` to text..
        /// </summary>
        internal static string LfNewLine {
            get {
                return ResourceManager.GetString("LfNewLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows duplicate sections. When a duplicate section is encountered, its keys are appended to the original section. The duplicate is not preserved when output to text..
        /// </summary>
        internal static string MergeDuplicateSectionIntoOriginal {
            get {
                return ResourceManager.GetString("MergeDuplicateSectionIntoOriginal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows duplicate sections. When a duplicate section is encountered, the original section is removed from its original position and its keys are appended to the duplicate section. The original section is not preserved when output to text..
        /// </summary>
        internal static string MergeOriginalSectionIntoDuplicate {
            get {
                return ResourceManager.GetString("MergeOriginalSectionIntoDuplicate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keys and values are separated only by whitespace..
        /// </summary>
        internal static string NoDelimiter {
            get {
                return ResourceManager.GetString("NoDelimiter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No space is inserted on either side of the delimiter..
        /// </summary>
        internal static string NoSpacing {
            get {
                return ResourceManager.GetString("NoSpacing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writes the colon delimiter to text..
        /// </summary>
        internal static string PreferColonDelimiter {
            get {
                return ResourceManager.GetString("PreferColonDelimiter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writes the equal delimiter to text..
        /// </summary>
        internal static string PreferEqualsDelimiter {
            get {
                return ResourceManager.GetString("PreferEqualsDelimiter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writes no delimiter except a single space between keys and values..
        /// </summary>
        internal static string PreferNoDelimiter {
            get {
                return ResourceManager.GetString("PreferNoDelimiter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A single space is added on the right side of the delimiter only..
        /// </summary>
        internal static string RightOnly {
            get {
                return ResourceManager.GetString("RightOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Comments may begin with a `;` token.
        /// </summary>
        internal static string SemicolonComments {
            get {
                return ResourceManager.GetString("SemicolonComments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accepts the escape sequences `\0`, `\a`, `\b`, `\f`, `\n`, `\r`, `\t`, `\v`, `\\&quot;`, `\&apos;`, `\#`, `\:`, `\ ` and `\xHHHH`.
        /// </summary>
        internal static string UseEscapeSequences {
            get {
                return ResourceManager.GetString("UseEscapeSequences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accepts the escape sequences `\0`, `\a`, `\b`, `\f`, `\n`, `\r`, `\t`, `\v`, `\\&quot;`, `\&apos;`, `\#`, `\:`, `\ ` and `\xHHHH`, as well as the line continuation token `\`.
        /// </summary>
        internal static string UseEscapeSequencesAndLineContinuation {
            get {
                return ResourceManager.GetString("UseEscapeSequencesAndLineContinuation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Quotation marks are treated as their own type of token and are not included in the key value. Any leading or trailing whitespace is included in the key value. Additionally, quotation marks are automatically added when adding leading or trailing whitespace to a key value..
        /// </summary>
        internal static string UseQuotation {
            get {
                return ResourceManager.GetString("UseQuotation", resourceCulture);
            }
        }
    }
}
